//	This file was generated by St4mpede.Surface 2016-05-20 23:40:15Z.

namespace TheDal.Surface
{
	using System.Collections.Generic;
	/// <summary> This is the Surface for the User table.
	/// </summary>
	public class UserSurface
	{
	
		public UserSurface()
		{
		}
	
		/// <summary> This method is used for adding a new record in the database.
		/// </summary>
		private TheDAL.Poco.User Add( System.String userName, System.String hashedPassword, System.DateTime lastLoggedOnDatetime )
		{
			//TODO:OF:TBA.
			return null;
		}
	
		/// <summary> This method is used for adding a new record in the database.
		/// </summary>
		private TheDAL.Poco.User Add( TheDAL.Poco.User user )
		{
			//TODO:OF:TBA.
			return null;
		}
	
		/// <summary> This method is used for deleting a record.
		/// </summary>
		public void Delete( TheDAL.Poco.User user )
		{
			//TODO:OF:TBA. =>get or throw exception.
		}
	
		/// <summary> This method is used for deleting a record by its primary key.
		/// </summary>
		public void DeleteById( System.Int32 userId )
		{
			//TODO:OF:TBA. =>get or throw exception.
		}
	
		/// <summary> This method returns every record for this table/surface.
		/// Do not use it on too big tables.
		/// </summary>
		public IList<TheDAL.Poco.User> GetAll()
		{
			//TODO:OF:TBA.
			return null;
		}
	
		/// <summary> This method is used for getting a record but its Id/primary key.
		/// If nothing is found an exception is thrown. If you want to get null back use LoadById <see cref="LoadById"> instead.
		/// </summary>
		public TheDAL.Poco.User GetById( System.Int32 userId )
		{
			//TODO:OF:TBA. =>get or throw exception.
			return null;
		}
	
		/// <summary> This method is used for getting a record but its Id/primary key.
		/// If nothing is found an null is returned. If you want to throw an exception use GetById <see cref="GetById"> instead.
		/// </summary>
		public TheDAL.Poco.User LoadById( System.Int32 userId )
		{
			//TODO:OF:TBA. =>get or return null.
			return null;
		}
	
		/// <summary> This method is used for updating an existing record in the database.
		/// </summary>
		private TheDAL.Poco.User Update( System.Int32 userId, System.String userName, System.String hashedPassword, System.DateTime lastLoggedOnDatetime )
		{
			//TODO:OF:TBA.
			return null;
		}
	
		/// <summary> This method is used for updating an existing record in the database.
		/// </summary>
		private TheDAL.Poco.User Update( TheDAL.Poco.User user )
		{
			//TODO:OF:TBA.
			return null;
		}
	
		/// <summary> This method is used for creating a new or  updating an existing record in the database.
		/// If the primary key is 0 (zero) we know it is a new record and try to add it. Otherwise we try to update the record.
		/// </summary>
		public TheDAL.Poco.User Upsert( System.Int32 userId, System.String userName, System.String hashedPassword, System.DateTime lastLoggedOnDatetime )
		{
			//TODO:OF:TBA. =>if( return 0 == primarykey ? Add(...) : Update(...)
			return null;
		}
	
		/// <summary> This method is used for creating a new or  updating an existing record in the database.
		/// If the primary key is 0 (zero) we know it is a new record and try to add it. Otherwise we try to update the record.
		/// </summary>
		public TheDAL.Poco.User Upsert( TheDAL.Poco.User user )
		{
			//TODO:OF:TBA. =>if( return 0 == primarykey ? Add(...) : Update(...)
			return null;
		}
	}
}
